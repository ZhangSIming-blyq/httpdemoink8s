apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "release-name" . }}
  namespace: {{ include "namespace" . }}
  annotations:
    kubernetes.io/change-cause: {{ quote .Values.changeCause }}
  labels:
    app.kubernetes.io/name: {{ include "release-name" . }}
    release: {{ include "release-name" . }}
spec:
  minReadySeconds: {{ .Values.minReadySeconds }}
  progressDeadlineSeconds: {{ .Values.progressDeadlineSeconds }}
  revisionHistoryLimit:  {{ .Values.revisionHistoryLimit }}
  strategy:
    type: {{ .Values.strategy.type }}
    {{- if eq .Values.strategy.type "RollingUpdate" }}
    rollingUpdate:
      maxSurge: {{ .Values.strategy.maxSurge }}
      maxUnavailable: {{ .Values.strategy.maxUnavailable }}
    {{- end }}
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "release-name" . }}
      release: {{ include "release-name" . }}
  template:
    metadata:
      name: {{ include "release-name" . }}
      labels:
        app.kubernetes.io/name: {{ include "release-name" . }}
        release: {{ include "release-name" . }}
      annotations:
        checksum/config: '{{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}'
        {{- with .Values.pod.annotations }}
{{ toYaml . | indent 8 }}
        {{- end }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - {{ include "release-name" . }}
                - key: release
                  operator: In
                  values:
                  - {{ include "release-name" . }}
              topologyKey: kubernetes.io/hostname
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      terminationGracePeriodSeconds: {{ .Values.pod.terminationGracePeriodSeconds }}
      imagePullSecrets:
      - name: {{ .Values.pod.imagePullSecrets }}
      containers:
      - name: {{ include "release-name" . }}
        image: {{ .Values.image.repository }}:{{ .Values.Chart.appversion }}
        {{- with .Values.image.command }}
        command: ["{{ join `", "` . }}"]
        {{- end }}
        {{- with .Values.image.args }}
        args: ["{{ join `", "` . }}"]
        {{- end }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        lifecycle:
          postStart:
            exec:
              command: ["sleep", "1"]
          preStop:
            exec:
              command: ["sleep", "1"]
        ports:
        {{- range $name, $config := .Values.ports }}
        - name: {{ $name | quote }}
          containerPort: {{ $config.targetPort }}
          protocol: TCP
        {{- end }}
        {{ with .Values.livenessProbe -}}
        livenessProbe:
{{ toYaml . | indent 10 }}
        {{- end }}
        {{ with .Values.readinessProbe -}}
        readinessProbe:
{{ toYaml . | indent 10 }}
        {{- end }}
        {{ with .Values.resources -}}
        resources:
{{ toYaml . | indent 10 }}
        {{- end }}
        {{ with .Values.env -}}
        env:
{{ toYaml . | indent 8 }}
        {{- end }}
        volumeMounts:
        {{- if .Values.configmap.enabled }}
        - name: configmap-volume
          mountPath: /home/work/configmap
        {{- end }}
        {{- if hasKey .Values.Chart "cluster_env" }}
        {{- if eq .Values.Chart.cluster_env "aws" }}
        - name: storage-core-volume
          mountPath: /tmp/cores
          subPath: {{ include "release-name" . }}-{{ include "namespace" . }}
        {{- end }}
        {{- end }}
        {{- if .Values.storage.enabled }}
        - name: storage-volume
          mountPath: {{ .Values.storage.pod_dir }}
        {{- end }}
        {{- with .Values.volumeMounts }}
{{ toYaml . | indent 8 }}
        {{- end }}
{{- if .Values.kubeInit.enabled }}
      initContainers:
      - name: init-container
        image: {{ .Values.kubeInit.image }}
        imagePullPolicy: {{ .Values.kubeInit.pullPolicy }}
        {{- with .Values.kubeInit.command }}
        command: ["{{ join `", "` . }}"]
        {{- end }}
        {{- with .Values.kubeInit.args }}
        args: ["{{ join `", "` . }}"]
        {{- end }}
        volumeMounts:
        - name: configmap-volume
          mountPath: /home/work/configmap
        {{- with .Values.volumeMounts }}
{{ toYaml . | indent 8 }}
        {{- end }}
{{- end }}
      volumes:
      {{- if hasKey .Values.Chart "cluster_env" }}
      {{- if eq .Values.Chart.cluster_env "aws" }}
      - name: storage-core-volume
        nfs:
          server: ip-10-20-11-248
          path: /home/work/nfsdata
      {{- end }}
      {{- end  }}
      {{- if .Values.configmap.enabled }}
      - name: configmap-volume
        configMap:
          name: {{ include "release-name" . }}
          defaultMode: 0640
      {{- end }}
      {{- if .Values.storage.enabled }}
      - name: storage-volume
        nfs:
          {{- if hasKey .Values.Chart "cluster_env" }}
          {{- if eq .Values.Chart.cluster_env "aliyun" }}
          server: 172.23.33.218
          {{- end }}
          {{- if eq .Values.Chart.cluster_env "aws" }}
          server: nfs-server
          {{- end }}
          {{- else }}
          server: nfs-server
          {{- end  }}
          path: {{ .Values.storage.storage_dir }}
      {{- end }}
      {{- with .Values.volumes }}
{{ toYaml . | indent 6 }}
      {{- end }}